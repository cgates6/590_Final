{
    "collab_server" : "",
    "contents" : "---\ntitle: \"590_Project\"\nauthor: \"Chris Gates\"\ndate: \"May 3, 2017\"\noutput: \n  md_document:\n    variant: markdown_github\n---\n\n```{R} \n#Determination of Contact Angle from Multiple Regression of Diameter vs Time and Multiple Regression of Contact Angle vs Time#\n#set working directory to work on EXCEL files#\nsetwd(dir=\"C:/Users/dell user/Desktop/Work/Contact_Angle/Contact Angle Resources/Data/CM\")\n\n#Pull the data from the desktop#\ncadata <- readxl::read_excel(\"CM-S1-1A_FINAL.xlsx\")\ncadata <- data.frame(cadata)\n\n#Select on the variables of CA, Time, and Diameter#\nCAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))\n\n#Select only the values in the column which are numeric#\nCAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]\n\n#Transform the data back into numbers, extract CAo (Co)#\nCA<-c(as.numeric(levels(CAM$CA))[CAM$CA])\nTime<-c(as.numeric(levels(CAM$Time))[CAM$Time])\nDiam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])\nCo<-CA[c(1)]\nDo<-Diam[c(1)]\n\nDiam <- c(Diam/Do)\nCAT <- c(Co/CA)\nCAO <- c(CA/Co)\n\nCAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))\n\n#Plot raw data Diameter vs Time#\nlibrary(ggplot2)\nDiamplot <- ggplot(CAM, aes(Time, Diam))+\n  geom_point()\n\nprint(Diamplot)\n\n#regression for Diam vs Time#\nm <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)\nm\n\n#plot for Diam vs time#\nDiamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+\n  geom_point()+\n  geom_smooth(method=\"nls\", \n              formula=y~1+b*(1-exp(-x/a)),\n              method.args=list(start=c(a=1, b=1)),\n              se=FALSE,\n              data=CAM,\n              color=\"red\")\n\nprint(Diamplot1)\n\n#Coefficient of Correlation for Diam vs Time model#\nRsquared_Diam <- cor(CAM$Diam, predict(m))\n\n#generate table for regression parameters#\nlibrary(broom)\nreg <- tidy(m)\n\n#transform a parameter into range of regression#\na <- reg$estimate\na <- a[c(1)]\nrange <- 3*a\n\n#make a variable for the b parameter for diameter vs time#\nb <- reg$estimate\nb <- b[c(2)]\n\n#regression for CAO=(CA/Cao) vs Time#\nm3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)\nm3\n\n#plot for m3#\nCAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(e*x^f),\n              method.args=list(start=c(e=1, f=1)),\n              se=FALSE)\n\nprint(CAOplot)\n\n#Coefficient of correlation for CA/CAo vs Time (model=m3)#\nRsquared_CAO <- cor(CAM$CAO, predict(m3))\n\n#generate table for regression parameters#\nreg3<- tidy(m3)\n\ne <- reg3$estimate\ne <- e[c(1)]\n\nf <- reg3$estimate\nf <- f[c(2)]\n\n#regression for CA using next method#\nm4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)\nm4\n\nCATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(h*(x^g)),\n              method.args=list(start=c(h=1, g=1)),\n              se=FALSE)\nprint(CATplot)\n\nRsquared_CAT <- cor(CAM$CAT, predict(m4))\n\n#generate table or regression parameters#\nreg4 <- tidy(m4)\n\nh <- reg4$estimate\nh <- h[c(1)]\n\ng <- reg4$estimate\ng <- g[c(2)]\n\n#Fit CAeq using the range from Diam vs Time regression and the model m4#\nCATeq <- (Co)/(1+(h*(range^g)))\n\n#Fit CAeq using the range from Diam vs Time regression and the model m3#\nCAOeq <- (1+e*range^f)*(Co)\n\n#Store the information for this rep in a data frame#\nCM_S1_1A <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)\n\n#Pull the data from the desktop#\ncadata <- readxl::read_excel(\"CM-S1-1B_FINAL.xlsx\")\ncadata <- data.frame(cadata)\n\n#Select on the variables of CA, Time, and Diameter#\nCAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))\n\n#Select only the values in the column which are numeric#\nCAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]\n\n#Transform the data back into numbers, extract CAo (Co)#\nCA<-c(as.numeric(levels(CAM$CA))[CAM$CA])\nTime<-c(as.numeric(levels(CAM$Time))[CAM$Time])\nDiam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])\nCo<-CA[c(1)]\nDo<-Diam[c(1)]\n\nDiam <- c(Diam/Do)\nCAT <- c(Co/CA)\nCAO <- c(CA/Co)\n\nCAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))\n\n#Plot raw data Diameter vs Time#\nlibrary(ggplot2)\nDiamplot <- ggplot(CAM, aes(Time, Diam))+\n  geom_point()\n\nprint(Diamplot)\n\n#regression for Diam vs Time#\nm <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)\nm\n\n#plot for Diam vs time#\nDiamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+\n  geom_point()+\n  geom_smooth(method=\"nls\", \n              formula=y~1+b*(1-exp(-x/a)),\n              method.args=list(start=c(a=1, b=1)),\n              se=FALSE,\n              data=CAM,\n              color=\"red\")\n\nprint(Diamplot1)\n\n#Coefficient of Correlation for Diam vs Time model#\nRsquared_Diam <- cor(CAM$Diam, predict(m))\n\n#generate table for regression parameters#\nlibrary(broom)\nreg <- tidy(m)\n\n#transform a parameter into range of regression#\na <- reg$estimate\na <- a[c(1)]\nrange <- 3*a\n\n#make a variable for the b parameter for diameter vs time#\nb <- reg$estimate\nb <- b[c(2)]\n\n#regression for CAO=(CA/Cao) vs Time#\nm3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)\nm3\n\n#plot for m3#\nCAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(e*x^f),\n              method.args=list(start=c(e=1, f=1)),\n              se=FALSE)\n\nprint(CAOplot)\n\n#Coefficient of correlation for CA/CAo vs Time (model=m3)#\nRsquared_CAO <- cor(CAM$CAO, predict(m3))\n\n#generate table for regression parameters#\nreg3<- tidy(m3)\n\ne <- reg3$estimate\ne <- e[c(1)]\n\nf <- reg3$estimate\nf <- f[c(2)]\n\n#regression for CA using next method#\nm4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)\nm4\n\nCATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(h*(x^g)),\n              method.args=list(start=c(h=1, g=1)),\n              se=FALSE)\nprint(CATplot)\n\nRsquared_CAT <- cor(CAM$CAT, predict(m4))\n\n#generate table or regression parameters#\nreg4 <- tidy(m4)\n\nh <- reg4$estimate\nh <- h[c(1)]\n\ng <- reg4$estimate\ng <- g[c(2)]\n\n#Fit CAeq using the range from Diam vs Time regression and the model m4#\nCATeq <- (Co)/(1+(h*(range^g)))\n\n#Fit CAeq using the range from Diam vs Time regression and the model m3#\nCAOeq <- (1+e*range^f)*(Co)\n\n#Store the information for this rep in a data frame#\nCM_S1_1B <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)\n\n#Pull the data from the desktop#\ncadata <- readxl::read_excel(\"CM-S1-1C_FINAL.xlsx\")\ncadata <- data.frame(cadata)\n\n#Select on the variables of CA, Time, and Diameter#\nCAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))\n\n#Select only the values in the column which are numeric#\nCAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]\n\n#Transform the data back into numbers, extract CAo (Co)#\nCA<-c(as.numeric(levels(CAM$CA))[CAM$CA])\nTime<-c(as.numeric(levels(CAM$Time))[CAM$Time])\nDiam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])\nCo<-CA[c(1)]\nDo<-Diam[c(1)]\n\nDiam <- c(Diam/Do)\nCAT <- c(Co/CA)\nCAO <- c(CA/Co)\n\nCAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))\n\n#Plot raw data Diameter vs Time#\nlibrary(ggplot2)\nDiamplot <- ggplot(CAM, aes(Time, Diam))+\n  geom_point()\n\nprint(Diamplot)\n\n#regression for Diam vs Time#\nm <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)\nm\n\n#plot for Diam vs time#\nDiamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+\n  geom_point()+\n  geom_smooth(method=\"nls\", \n              formula=y~1+b*(1-exp(-x/a)),\n              method.args=list(start=c(a=1, b=1)),\n              se=FALSE,\n              data=CAM,\n              color=\"red\")\n\nprint(Diamplot1)\n\n#Coefficient of Correlation for Diam vs Time model#\nRsquared_Diam <- cor(CAM$Diam, predict(m))\n\n#generate table for regression parameters#\nlibrary(broom)\nreg <- tidy(m)\n\n#transform a parameter into range of regression#\na <- reg$estimate\na <- a[c(1)]\nrange <- 3*a\n\n#make a variable for the b parameter for diameter vs time#\nb <- reg$estimate\nb <- b[c(2)]\n\n#regression for CAO=(CA/Cao) vs Time#\nm3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)\nm3\n\n#plot for m3#\nCAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(e*x^f),\n              method.args=list(start=c(e=1, f=1)),\n              se=FALSE)\n\nprint(CAOplot)\n\n#Coefficient of correlation for CA/CAo vs Time (model=m3)#\nRsquared_CAO <- cor(CAM$CAO, predict(m3))\n\n#generate table for regression parameters#\nreg3<- tidy(m3)\n\ne <- reg3$estimate\ne <- e[c(1)]\n\nf <- reg3$estimate\nf <- f[c(2)]\n\n#regression for CA using next method#\nm4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)\nm4\n\nCATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(h*(x^g)),\n              method.args=list(start=c(h=1, g=1)),\n              se=FALSE)\nprint(CATplot)\n\nRsquared_CAT <- cor(CAM$CAT, predict(m4))\n\n#generate table or regression parameters#\nreg4 <- tidy(m4)\n\nh <- reg4$estimate\nh <- h[c(1)]\n\ng <- reg4$estimate\ng <- g[c(2)]\n\n#Fit CAeq using the range from Diam vs Time regression and the model m4#\nCATeq <- (Co)/(1+(h*(range^g)))\n\n#Fit CAeq using the range from Diam vs Time regression and the model m3#\nCAOeq <- (1+e*range^f)*(Co)\n\n#Store the information for this rep in a data frame#\nCM_S1_1C <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)\n\n#Pull the data from the desktop#\ncadata <- readxl::read_excel(\"CM-S1-2A_FINAL.xlsx\")\ncadata <- data.frame(cadata)\n\n#Select on the variables of CA, Time, and Diameter#\nCAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))\n\n#Select only the values in the column which are numeric#\nCAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]\n\n#Transform the data back into numbers, extract CAo (Co)#\nCA<-c(as.numeric(levels(CAM$CA))[CAM$CA])\nTime<-c(as.numeric(levels(CAM$Time))[CAM$Time])\nDiam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])\nCo<-CA[c(1)]\nDo<-Diam[c(1)]\n\nDiam <- c(Diam/Do)\nCAT <- c(Co/CA)\nCAO <- c(CA/Co)\n\nCAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))\n\n#Plot raw data Diameter vs Time#\nlibrary(ggplot2)\nDiamplot <- ggplot(CAM, aes(Time, Diam))+\n  geom_point()\n\nprint(Diamplot)\n\n#regression for Diam vs Time#\nm <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)\nm\n\n#plot for Diam vs time#\nDiamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+\n  geom_point()+\n  geom_smooth(method=\"nls\", \n              formula=y~1+b*(1-exp(-x/a)),\n              method.args=list(start=c(a=1, b=1)),\n              se=FALSE,\n              data=CAM,\n              color=\"red\")\n\nprint(Diamplot1)\n\n#Coefficient of Correlation for Diam vs Time model#\nRsquared_Diam <- cor(CAM$Diam, predict(m))\n\n#generate table for regression parameters#\nlibrary(broom)\nreg <- tidy(m)\n\n#transform a parameter into range of regression#\na <- reg$estimate\na <- a[c(1)]\nrange <- 3*a\n\n#make a variable for the b parameter for diameter vs time#\nb <- reg$estimate\nb <- b[c(2)]\n\n#regression for CAO=(CA/Cao) vs Time#\nm3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)\nm3\n\n#plot for m3#\nCAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(e*x^f),\n              method.args=list(start=c(e=1, f=1)),\n              se=FALSE)\n\nprint(CAOplot)\n\n#Coefficient of correlation for CA/CAo vs Time (model=m3)#\nRsquared_CAO <- cor(CAM$CAO, predict(m3))\n\n#generate table for regression parameters#\nreg3<- tidy(m3)\n\ne <- reg3$estimate\ne <- e[c(1)]\n\nf <- reg3$estimate\nf <- f[c(2)]\n\n#regression for CA using next method#\nm4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)\nm4\n\nCATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(h*(x^g)),\n              method.args=list(start=c(h=1, g=1)),\n              se=FALSE)\nprint(CATplot)\n\nRsquared_CAT <- cor(CAM$CAT, predict(m4))\n\n#generate table or regression parameters#\nreg4 <- tidy(m4)\n\nh <- reg4$estimate\nh <- h[c(1)]\n\ng <- reg4$estimate\ng <- g[c(2)]\n\n#Fit CAeq using the range from Diam vs Time regression and the model m4#\nCATeq <- (Co)/(1+(h*(range^g)))\n\n#Fit CAeq using the range from Diam vs Time regression and the model m3#\nCAOeq <- (1+e*range^f)*(Co)\n\n#Store the information for this rep in a data frame#\nCM_S1_2A <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)\n\n#Pull the data from the desktop#\ncadata <- readxl::read_excel(\"CM-S1-2B_FINAL.xlsx\")\ncadata <- data.frame(cadata)\n\n#Select on the variables of CA, Time, and Diameter#\nCAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))\n\n#Select only the values in the column which are numeric#\nCAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]\n\n#Transform the data back into numbers, extract CAo (Co)#\nCA<-c(as.numeric(levels(CAM$CA))[CAM$CA])\nTime<-c(as.numeric(levels(CAM$Time))[CAM$Time])\nDiam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])\nCo<-CA[c(1)]\nDo<-Diam[c(1)]\n\nDiam <- c(Diam/Do)\nCAT <- c(Co/CA)\nCAO <- c(CA/Co)\n\nCAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))\n\n#Plot raw data Diameter vs Time#\nlibrary(ggplot2)\nDiamplot <- ggplot(CAM, aes(Time, Diam))+\n  geom_point()\n\nprint(Diamplot)\n\n#regression for Diam vs Time#\nm <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)\nm\n\n#plot for Diam vs time#\nDiamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+\n  geom_point()+\n  geom_smooth(method=\"nls\", \n              formula=y~1+b*(1-exp(-x/a)),\n              method.args=list(start=c(a=1, b=1)),\n              se=FALSE,\n              data=CAM,\n              color=\"red\")\n\nprint(Diamplot1)\n\n#Coefficient of Correlation for Diam vs Time model#\nRsquared_Diam <- cor(CAM$Diam, predict(m))\n\n#generate table for regression parameters#\nlibrary(broom)\nreg <- tidy(m)\n\n#transform a parameter into range of regression#\na <- reg$estimate\na <- a[c(1)]\nrange <- 3*a\n\n#make a variable for the b parameter for diameter vs time#\nb <- reg$estimate\nb <- b[c(2)]\n\n#regression for CAO=(CA/Cao) vs Time#\nm3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)\nm3\n\n#plot for m3#\nCAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(e*x^f),\n              method.args=list(start=c(e=1, f=1)),\n              se=FALSE)\n\nprint(CAOplot)\n\n#Coefficient of correlation for CA/CAo vs Time (model=m3)#\nRsquared_CAO <- cor(CAM$CAO, predict(m3))\n\n#generate table for regression parameters#\nreg3<- tidy(m3)\n\ne <- reg3$estimate\ne <- e[c(1)]\n\nf <- reg3$estimate\nf <- f[c(2)]\n\n#regression for CA using next method#\nm4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)\nm4\n\nCATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(h*(x^g)),\n              method.args=list(start=c(h=1, g=1)),\n              se=FALSE)\nprint(CATplot)\n\nRsquared_CAT <- cor(CAM$CAT, predict(m4))\n\n#generate table or regression parameters#\nreg4 <- tidy(m4)\n\nh <- reg4$estimate\nh <- h[c(1)]\n\ng <- reg4$estimate\ng <- g[c(2)]\n\n#Fit CAeq using the range from Diam vs Time regression and the model m4#\nCATeq <- (Co)/(1+(h*(range^g)))\n\n#Fit CAeq using the range from Diam vs Time regression and the model m3#\nCAOeq <- (1+e*range^f)*(Co)\n\n#Store the information for this rep in a data frame#\nCM_S1_2B <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)\n\n#Pull the data from the desktop#\ncadata <- readxl::read_excel(\"CM-S1-2C_FINAL.xlsx\")\ncadata <- data.frame(cadata)\n\n#Select on the variables of CA, Time, and Diameter#\nCAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))\n\n#Select only the values in the column which are numeric#\nCAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]\n\n#Transform the data back into numbers, extract CAo (Co)#\nCA<-c(as.numeric(levels(CAM$CA))[CAM$CA])\nTime<-c(as.numeric(levels(CAM$Time))[CAM$Time])\nDiam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])\nCo<-CA[c(1)]\nDo<-Diam[c(1)]\n\nDiam <- c(Diam/Do)\nCAT <- c(Co/CA)\nCAO <- c(CA/Co)\n\nCAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))\n\n#Plot raw data Diameter vs Time#\nlibrary(ggplot2)\nDiamplot <- ggplot(CAM, aes(Time, Diam))+\n  geom_point()\n\nprint(Diamplot)\n\n#regression for Diam vs Time#\nm <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)\nm\n\n#plot for Diam vs time#\nDiamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+\n  geom_point()+\n  geom_smooth(method=\"nls\", \n              formula=y~1+b*(1-exp(-x/a)),\n              method.args=list(start=c(a=1, b=1)),\n              se=FALSE,\n              data=CAM,\n              color=\"red\")\n\nprint(Diamplot1)\n\n#Coefficient of Correlation for Diam vs Time model#\nRsquared_Diam <- cor(CAM$Diam, predict(m))\n\n#generate table for regression parameters#\nlibrary(broom)\nreg <- tidy(m)\n\n#transform a parameter into range of regression#\na <- reg$estimate\na <- a[c(1)]\nrange <- 3*a\n\n#make a variable for the b parameter for diameter vs time#\nb <- reg$estimate\nb <- b[c(2)]\n\n#regression for CAO=(CA/Cao) vs Time#\nm3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)\nm3\n\n#plot for m3#\nCAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(e*x^f),\n              method.args=list(start=c(e=1, f=1)),\n              se=FALSE)\n\nprint(CAOplot)\n\n#Coefficient of correlation for CA/CAo vs Time (model=m3)#\nRsquared_CAO <- cor(CAM$CAO, predict(m3))\n\n#generate table for regression parameters#\nreg3<- tidy(m3)\n\ne <- reg3$estimate\ne <- e[c(1)]\n\nf <- reg3$estimate\nf <- f[c(2)]\n\n#regression for CA using next method#\nm4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)\nm4\n\nCATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(h*(x^g)),\n              method.args=list(start=c(h=1, g=1)),\n              se=FALSE)\nprint(CATplot)\n\nRsquared_CAT <- cor(CAM$CAT, predict(m4))\n\n#generate table or regression parameters#\nreg4 <- tidy(m4)\n\nh <- reg4$estimate\nh <- h[c(1)]\n\ng <- reg4$estimate\ng <- g[c(2)]\n\n#Fit CAeq using the range from Diam vs Time regression and the model m4#\nCATeq <- (Co)/(1+(h*(range^g)))\n\n#Fit CAeq using the range from Diam vs Time regression and the model m3#\nCAOeq <- (1+e*range^f)*(Co)\n\n#Store the information for this rep in a data frame#\nCM_S1_2C <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)\n\n#Pull the data from the desktop#\ncadata <- readxl::read_excel(\"CM-S2-1A_FINAL.xlsx\")\ncadata <- data.frame(cadata)\n\n#Select on the variables of CA, Time, and Diameter#\nCAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))\n\n#Select only the values in the column which are numeric#\nCAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]\n\n#Transform the data back into numbers, extract CAo (Co)#\nCA<-c(as.numeric(levels(CAM$CA))[CAM$CA])\nTime<-c(as.numeric(levels(CAM$Time))[CAM$Time])\nDiam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])\nCo<-CA[c(1)]\nDo<-Diam[c(1)]\n\nDiam <- c(Diam/Do)\nCAT <- c(Co/CA)\nCAO <- c(CA/Co)\n\nCAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))\n\n#Plot raw data Diameter vs Time#\nlibrary(ggplot2)\nDiamplot <- ggplot(CAM, aes(Time, Diam))+\n  geom_point()\n\nprint(Diamplot)\n\n#regression for Diam vs Time#\nm <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)\nm\n\n#plot for Diam vs time#\nDiamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+\n  geom_point()+\n  geom_smooth(method=\"nls\", \n              formula=y~1+b*(1-exp(-x/a)),\n              method.args=list(start=c(a=1, b=1)),\n              se=FALSE,\n              data=CAM,\n              color=\"red\")\n\nprint(Diamplot1)\n\n#Coefficient of Correlation for Diam vs Time model#\nRsquared_Diam <- cor(CAM$Diam, predict(m))\n\n#generate table for regression parameters#\nlibrary(broom)\nreg <- tidy(m)\n\n#transform a parameter into range of regression#\na <- reg$estimate\na <- a[c(1)]\nrange <- 3*a\n\n#make a variable for the b parameter for diameter vs time#\nb <- reg$estimate\nb <- b[c(2)]\n\n#regression for CAO=(CA/Cao) vs Time#\nm3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)\nm3\n\n#plot for m3#\nCAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(e*x^f),\n              method.args=list(start=c(e=1, f=1)),\n              se=FALSE)\n\nprint(CAOplot)\n\n#Coefficient of correlation for CA/CAo vs Time (model=m3)#\nRsquared_CAO <- cor(CAM$CAO, predict(m3))\n\n#generate table for regression parameters#\nreg3<- tidy(m3)\n\ne <- reg3$estimate\ne <- e[c(1)]\n\nf <- reg3$estimate\nf <- f[c(2)]\n\n#regression for CA using next method#\nm4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)\nm4\n\nCATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(h*(x^g)),\n              method.args=list(start=c(h=1, g=1)),\n              se=FALSE)\nprint(CATplot)\n\nRsquared_CAT <- cor(CAM$CAT, predict(m4))\n\n#generate table or regression parameters#\nreg4 <- tidy(m4)\n\nh <- reg4$estimate\nh <- h[c(1)]\n\ng <- reg4$estimate\ng <- g[c(2)]\n\n#Fit CAeq using the range from Diam vs Time regression and the model m4#\nCATeq <- (Co)/(1+(h*(range^g)))\n\n#Fit CAeq using the range from Diam vs Time regression and the model m3#\nCAOeq <- (1+e*range^f)*(Co)\n\n#Store the information for this rep in a data frame#\nCM_S2_1A <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)\n\n#Pull the data from the desktop#\ncadata <- readxl::read_excel(\"CM-S2-1B_FINAL.xlsx\")\ncadata <- data.frame(cadata)\n\n#Select on the variables of CA, Time, and Diameter#\nCAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))\n\n#Select only the values in the column which are numeric#\nCAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]\n\n#Transform the data back into numbers, extract CAo (Co)#\nCA<-c(as.numeric(levels(CAM$CA))[CAM$CA])\nTime<-c(as.numeric(levels(CAM$Time))[CAM$Time])\nDiam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])\nCo<-CA[c(1)]\nDo<-Diam[c(1)]\n\nDiam <- c(Diam/Do)\nCAT <- c(Co/CA)\nCAO <- c(CA/Co)\n\nCAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))\n\n#Plot raw data Diameter vs Time#\nlibrary(ggplot2)\nDiamplot <- ggplot(CAM, aes(Time, Diam))+\n  geom_point()\n\nprint(Diamplot)\n\n#regression for Diam vs Time#\nm <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)\nm\n\n#plot for Diam vs time#\nDiamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+\n  geom_point()+\n  geom_smooth(method=\"nls\", \n              formula=y~1+b*(1-exp(-x/a)),\n              method.args=list(start=c(a=1, b=1)),\n              se=FALSE,\n              data=CAM,\n              color=\"red\")\n\nprint(Diamplot1)\n\n#Coefficient of Correlation for Diam vs Time model#\nRsquared_Diam <- cor(CAM$Diam, predict(m))\n\n#generate table for regression parameters#\nlibrary(broom)\nreg <- tidy(m)\n\n#transform a parameter into range of regression#\na <- reg$estimate\na <- a[c(1)]\nrange <- 3*a\n\n#make a variable for the b parameter for diameter vs time#\nb <- reg$estimate\nb <- b[c(2)]\n\n#regression for CAO=(CA/Cao) vs Time#\nm3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)\nm3\n\n#plot for m3#\nCAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(e*x^f),\n              method.args=list(start=c(e=1, f=1)),\n              se=FALSE)\n\nprint(CAOplot)\n\n#Coefficient of correlation for CA/CAo vs Time (model=m3)#\nRsquared_CAO <- cor(CAM$CAO, predict(m3))\n\n#generate table for regression parameters#\nreg3<- tidy(m3)\n\ne <- reg3$estimate\ne <- e[c(1)]\n\nf <- reg3$estimate\nf <- f[c(2)]\n\n#regression for CA using next method#\nm4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)\nm4\n\nCATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(h*(x^g)),\n              method.args=list(start=c(h=1, g=1)),\n              se=FALSE)\nprint(CATplot)\n\nRsquared_CAT <- cor(CAM$CAT, predict(m4))\n\n#generate table or regression parameters#\nreg4 <- tidy(m4)\n\nh <- reg4$estimate\nh <- h[c(1)]\n\ng <- reg4$estimate\ng <- g[c(2)]\n\n#Fit CAeq using the range from Diam vs Time regression and the model m4#\nCATeq <- (Co)/(1+(h*(range^g)))\n\n#Fit CAeq using the range from Diam vs Time regression and the model m3#\nCAOeq <- (1+e*range^f)*(Co)\n\n#Store the information for this rep in a data frame#\nCM_S2_1B <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)\n\n#Pull the data from the desktop#\ncadata <- readxl::read_excel(\"CM-S2-1C_FINAL.xlsx\")\ncadata <- data.frame(cadata)\n\n#Select on the variables of CA, Time, and Diameter#\nCAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))\n\n#Select only the values in the column which are numeric#\nCAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]\n\n#Transform the data back into numbers, extract CAo (Co)#\nCA<-c(as.numeric(levels(CAM$CA))[CAM$CA])\nTime<-c(as.numeric(levels(CAM$Time))[CAM$Time])\nDiam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])\nCo<-CA[c(1)]\nDo<-Diam[c(1)]\n\nDiam <- c(Diam/Do)\nCAT <- c(Co/CA)\nCAO <- c(CA/Co)\n\nCAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))\n\n#Plot raw data Diameter vs Time#\nlibrary(ggplot2)\nDiamplot <- ggplot(CAM, aes(Time, Diam))+\n  geom_point()\n\nprint(Diamplot)\n\n#regression for Diam vs Time#\nm <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)\nm\n\n#plot for Diam vs time#\nDiamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+\n  geom_point()+\n  geom_smooth(method=\"nls\", \n              formula=y~1+b*(1-exp(-x/a)),\n              method.args=list(start=c(a=1, b=1)),\n              se=FALSE,\n              data=CAM,\n              color=\"red\")\n\nprint(Diamplot1)\n\n#Coefficient of Correlation for Diam vs Time model#\nRsquared_Diam <- cor(CAM$Diam, predict(m))\n\n#generate table for regression parameters#\nlibrary(broom)\nreg <- tidy(m)\n\n#transform a parameter into range of regression#\na <- reg$estimate\na <- a[c(1)]\nrange <- 3*a\n\n#make a variable for the b parameter for diameter vs time#\nb <- reg$estimate\nb <- b[c(2)]\n\n#regression for CAO=(CA/Cao) vs Time#\nm3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)\nm3\n\n#plot for m3#\nCAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(e*x^f),\n              method.args=list(start=c(e=1, f=1)),\n              se=FALSE)\n\nprint(CAOplot)\n\n#Coefficient of correlation for CA/CAo vs Time (model=m3)#\nRsquared_CAO <- cor(CAM$CAO, predict(m3))\n\n#generate table for regression parameters#\nreg3<- tidy(m3)\n\ne <- reg3$estimate\ne <- e[c(1)]\n\nf <- reg3$estimate\nf <- f[c(2)]\n\n#regression for CA using next method#\nm4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)\nm4\n\nCATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(h*(x^g)),\n              method.args=list(start=c(h=1, g=1)),\n              se=FALSE)\nprint(CATplot)\n\nRsquared_CAT <- cor(CAM$CAT, predict(m4))\n\n#generate table or regression parameters#\nreg4 <- tidy(m4)\n\nh <- reg4$estimate\nh <- h[c(1)]\n\ng <- reg4$estimate\ng <- g[c(2)]\n\n#Fit CAeq using the range from Diam vs Time regression and the model m4#\nCATeq <- (Co)/(1+(h*(range^g)))\n\n#Fit CAeq using the range from Diam vs Time regression and the model m3#\nCAOeq <- (1+e*range^f)*(Co)\n\n#Store the information for this rep in a data frame#\nCM_S2_1C <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)\n\n#Pull the data from the desktop#\ncadata <- readxl::read_excel(\"CM-S2-2A_FINAL.xlsx\")\ncadata <- data.frame(cadata)\n\n#Select on the variables of CA, Time, and Diameter#\nCAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))\n\n#Select only the values in the column which are numeric#\nCAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]\n\n#Transform the data back into numbers, extract CAo (Co)#\nCA<-c(as.numeric(levels(CAM$CA))[CAM$CA])\nTime<-c(as.numeric(levels(CAM$Time))[CAM$Time])\nDiam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])\nCo<-CA[c(1)]\nDo<-Diam[c(1)]\n\nDiam <- c(Diam/Do)\nCAT <- c(Co/CA)\nCAO <- c(CA/Co)\n\nCAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))\n\n#Plot raw data Diameter vs Time#\nlibrary(ggplot2)\nDiamplot <- ggplot(CAM, aes(Time, Diam))+\n  geom_point()\n\nprint(Diamplot)\n\n#regression for Diam vs Time#\nm <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)\nm\n\n#plot for Diam vs time#\nDiamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+\n  geom_point()+\n  geom_smooth(method=\"nls\", \n              formula=y~1+b*(1-exp(-x/a)),\n              method.args=list(start=c(a=1, b=1)),\n              se=FALSE,\n              data=CAM,\n              color=\"red\")\n\nprint(Diamplot1)\n\n#Coefficient of Correlation for Diam vs Time model#\nRsquared_Diam <- cor(CAM$Diam, predict(m))\n\n#generate table for regression parameters#\nlibrary(broom)\nreg <- tidy(m)\n\n#transform a parameter into range of regression#\na <- reg$estimate\na <- a[c(1)]\nrange <- 3*a\n\n#make a variable for the b parameter for diameter vs time#\nb <- reg$estimate\nb <- b[c(2)]\n\n#regression for CAO=(CA/Cao) vs Time#\nm3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)\nm3\n\n#plot for m3#\nCAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(e*x^f),\n              method.args=list(start=c(e=1, f=1)),\n              se=FALSE)\n\nprint(CAOplot)\n\n#Coefficient of correlation for CA/CAo vs Time (model=m3)#\nRsquared_CAO <- cor(CAM$CAO, predict(m3))\n\n#generate table for regression parameters#\nreg3<- tidy(m3)\n\ne <- reg3$estimate\ne <- e[c(1)]\n\nf <- reg3$estimate\nf <- f[c(2)]\n\n#regression for CA using next method#\nm4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)\nm4\n\nCATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(h*(x^g)),\n              method.args=list(start=c(h=1, g=1)),\n              se=FALSE)\nprint(CATplot)\n\nRsquared_CAT <- cor(CAM$CAT, predict(m4))\n\n#generate table or regression parameters#\nreg4 <- tidy(m4)\n\nh <- reg4$estimate\nh <- h[c(1)]\n\ng <- reg4$estimate\ng <- g[c(2)]\n\n#Fit CAeq using the range from Diam vs Time regression and the model m4#\nCATeq <- (Co)/(1+(h*(range^g)))\n\n#Fit CAeq using the range from Diam vs Time regression and the model m3#\nCAOeq <- (1+e*range^f)*(Co)\n\n#Store the information for this rep in a data frame#\nCM_S2_2A <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)\n\n#Pull the data from the desktop#\ncadata <- readxl::read_excel(\"CM-S2-2B_FINAL.xlsx\")\ncadata <- data.frame(cadata)\n\n#Select on the variables of CA, Time, and Diameter#\nCAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))\n\n#Select only the values in the column which are numeric#\nCAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]\n\n#Transform the data back into numbers, extract CAo (Co)#\nCA<-c(as.numeric(levels(CAM$CA))[CAM$CA])\nTime<-c(as.numeric(levels(CAM$Time))[CAM$Time])\nDiam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])\nCo<-CA[c(1)]\nDo<-Diam[c(1)]\n\nDiam <- c(Diam/Do)\nCAT <- c(Co/CA)\nCAO <- c(CA/Co)\n\nCAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))\n\n#Plot raw data Diameter vs Time#\nlibrary(ggplot2)\nDiamplot <- ggplot(CAM, aes(Time, Diam))+\n  geom_point()\n\nprint(Diamplot)\n\n#regression for Diam vs Time#\nm <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)\nm\n\n#plot for Diam vs time#\nDiamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+\n  geom_point()+\n  geom_smooth(method=\"nls\", \n              formula=y~1+b*(1-exp(-x/a)),\n              method.args=list(start=c(a=1, b=1)),\n              se=FALSE,\n              data=CAM,\n              color=\"red\")\n\nprint(Diamplot1)\n\n#Coefficient of Correlation for Diam vs Time model#\nRsquared_Diam <- cor(CAM$Diam, predict(m))\n\n#generate table for regression parameters#\nlibrary(broom)\nreg <- tidy(m)\n\n#transform a parameter into range of regression#\na <- reg$estimate\na <- a[c(1)]\nrange <- 3*a\n\n#make a variable for the b parameter for diameter vs time#\nb <- reg$estimate\nb <- b[c(2)]\n\n#regression for CAO=(CA/Cao) vs Time#\nm3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)\nm3\n\n#plot for m3#\nCAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(e*x^f),\n              method.args=list(start=c(e=1, f=1)),\n              se=FALSE)\n\nprint(CAOplot)\n\n#Coefficient of correlation for CA/CAo vs Time (model=m3)#\nRsquared_CAO <- cor(CAM$CAO, predict(m3))\n\n#generate table for regression parameters#\nreg3<- tidy(m3)\n\ne <- reg3$estimate\ne <- e[c(1)]\n\nf <- reg3$estimate\nf <- f[c(2)]\n\n#regression for CA using next method#\nm4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)\nm4\n\nCATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(h*(x^g)),\n              method.args=list(start=c(h=1, g=1)),\n              se=FALSE)\nprint(CATplot)\n\nRsquared_CAT <- cor(CAM$CAT, predict(m4))\n\n#generate table or regression parameters#\nreg4 <- tidy(m4)\n\nh <- reg4$estimate\nh <- h[c(1)]\n\ng <- reg4$estimate\ng <- g[c(2)]\n\n#Fit CAeq using the range from Diam vs Time regression and the model m4#\nCATeq <- (Co)/(1+(h*(range^g)))\n\n#Fit CAeq using the range from Diam vs Time regression and the model m3#\nCAOeq <- (1+e*range^f)*(Co)\n\n#Store the information for this rep in a data frame#\nCM_S2_2B <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)\n\n#Pull the data from the desktop#\ncadata <- readxl::read_excel(\"CM-S2-2C_FINAL.xlsx\")\ncadata <- data.frame(cadata)\n\n#Select on the variables of CA, Time, and Diameter#\nCAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))\n\n#Select only the values in the column which are numeric#\nCAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]\n\n#Transform the data back into numbers, extract CAo (Co)#\nCA<-c(as.numeric(levels(CAM$CA))[CAM$CA])\nTime<-c(as.numeric(levels(CAM$Time))[CAM$Time])\nDiam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])\nCo<-CA[c(1)]\nDo<-Diam[c(1)]\n\nDiam <- c(Diam/Do)\nCAT <- c(Co/CA)\nCAO <- c(CA/Co)\n\nCAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))\n\n#Plot raw data Diameter vs Time#\nlibrary(ggplot2)\nDiamplot <- ggplot(CAM, aes(Time, Diam))+\n  geom_point()\n\nprint(Diamplot)\n\n#regression for Diam vs Time#\nm <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)\nm\n\n#plot for Diam vs time#\nDiamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+\n  geom_point()+\n  geom_smooth(method=\"nls\", \n              formula=y~1+b*(1-exp(-x/a)),\n              method.args=list(start=c(a=1, b=1)),\n              se=FALSE,\n              data=CAM,\n              color=\"red\")\n\nprint(Diamplot1)\n\n#Coefficient of Correlation for Diam vs Time model#\nRsquared_Diam <- cor(CAM$Diam, predict(m))\n\n#generate table for regression parameters#\nlibrary(broom)\nreg <- tidy(m)\n\n#transform a parameter into range of regression#\na <- reg$estimate\na <- a[c(1)]\nrange <- 3*a\n\n#make a variable for the b parameter for diameter vs time#\nb <- reg$estimate\nb <- b[c(2)]\n\n#regression for CAO=(CA/Cao) vs Time#\nm3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)\nm3\n\n#plot for m3#\nCAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(e*x^f),\n              method.args=list(start=c(e=1, f=1)),\n              se=FALSE)\n\nprint(CAOplot)\n\n#Coefficient of correlation for CA/CAo vs Time (model=m3)#\nRsquared_CAO <- cor(CAM$CAO, predict(m3))\n\n#generate table for regression parameters#\nreg3<- tidy(m3)\n\ne <- reg3$estimate\ne <- e[c(1)]\n\nf <- reg3$estimate\nf <- f[c(2)]\n\n#regression for CA using next method#\nm4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)\nm4\n\nCATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+\n  geom_point()+\n  geom_smooth(method=\"nls\",\n              formula=y~1+(h*(x^g)),\n              method.args=list(start=c(h=1, g=1)),\n              se=FALSE)\nprint(CATplot)\n\nRsquared_CAT <- cor(CAM$CAT, predict(m4))\n\n#generate table or regression parameters#\nreg4 <- tidy(m4)\n\nh <- reg4$estimate\nh <- h[c(1)]\n\ng <- reg4$estimate\ng <- g[c(2)]\n\n#Fit CAeq using the range from Diam vs Time regression and the model m4#\nCATeq <- (Co)/(1+(h*(range^g)))\n\n#Fit CAeq using the range from Diam vs Time regression and the model m3#\nCAOeq <- (1+e*range^f)*(Co)\n\n#Store the information for this rep in a data frame#\nCM_S2_2C <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)\n\nCM_Data <- rbind.data.frame(CM_S1_1A=CM_S1_1A, CM_S1_1B=CM_S1_1B, CM_S1_1C=CM_S1_1C, CM_S1_2A=CM_S1_2A, CM_S1_2B=CM_S1_2B, CM_S1_2C=CM_S1_2C, CM_S2_1A=CM_S2_1A, CM_S2_1B=CM_S2_1B, CM_S2_1C=CM_S2_1C, CM_S2_2A=CM_S2_2A, CM_S2_2B=CM_S2_2B, CM_S2_2C=CM_S2_2C)\n\nMean_Eq_Contact_Angle_CM <- mean(CM_Data[[\"CAOeq\"]])\n\nprint(CM_Data, digits = NULL,\n      quote = FALSE, right = TRUE, row.names = TRUE)\n\nMean_Eq_Contact_Angle_CM\n\nwrite.csv(CM_Data,\"C:/Users/dell user/Desktop/CM_Data.csv\")\n```\n",
    "created" : 1494343186090.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "988784500",
    "id" : "C66C4ECD",
    "lastKnownWriteTime" : 1494006306,
    "last_content_update" : 1494006306,
    "path" : "C:/Users/dell user/Desktop/GEOL_590/590_Final/590_Project.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}