#plot for Diam vs time#
Diamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+b*(1-exp(-x/a)),
method.args=list(start=c(a=1, b=1)),
se=FALSE,
data=CAM,
color="red")
print(Diamplot1)
#Coefficient of Correlation for Diam vs Time model#
Rsquared_Diam <- cor(CAM$Diam, predict(m))
#generate table for regression parameters#
library(broom)
reg <- tidy(m)
#transform a parameter into range of regression#
a <- reg$estimate
a <- a[c(1)]
range <- 3*a
#make a variable for the b parameter for diameter vs time#
b <- reg$estimate
b <- b[c(2)]
#regression for CAO=(CA/Cao) vs Time#
m3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)
m3
#plot for m3#
CAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+(e*x^f),
method.args=list(start=c(e=1, f=1)),
se=FALSE)
print(CAOplot)
#Coefficient of correlation for CA/CAo vs Time (model=m3)#
Rsquared_CAO <- cor(CAM$CAO, predict(m3))
#generate table for regression parameters#
reg3<- tidy(m3)
e <- reg3$estimate
e <- e[c(1)]
f <- reg3$estimate
f <- f[c(2)]
#regression for CA using next method#
m4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)
m4
CATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+(h*(x^g)),
method.args=list(start=c(h=1, g=1)),
se=FALSE)
print(CATplot)
Rsquared_CAT <- cor(CAM$CAT, predict(m4))
#generate table or regression parameters#
reg4 <- tidy(m4)
h <- reg4$estimate
h <- h[c(1)]
g <- reg4$estimate
g <- g[c(2)]
#Fit CAeq using the range from Diam vs Time regression and the model m4#
CATeq <- (Co)/(1+(h*(range^g)))
#Fit CAeq using the range from Diam vs Time regression and the model m3#
CAOeq <- (1+e*range^f)*(Co)
#Store the information for this rep in a data frame#
CM_S2_1A <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)
#Pull the data from the desktop#
cadata <- readxl::read_excel("CM-S2-1B_FINAL.xlsx")
cadata <- data.frame(cadata)
#Select on the variables of CA, Time, and Diameter#
CAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))
#Select only the values in the column which are numeric#
CAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]
#Transform the data back into numbers, extract CAo (Co)#
CA<-c(as.numeric(levels(CAM$CA))[CAM$CA])
Time<-c(as.numeric(levels(CAM$Time))[CAM$Time])
Diam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])
Co<-CA[c(1)]
Do<-Diam[c(1)]
Diam <- c(Diam/Do)
CAT <- c(Co/CA)
CAO <- c(CA/Co)
CAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))
#Plot raw data Diameter vs Time#
library(ggplot2)
Diamplot <- ggplot(CAM, aes(Time, Diam))+
geom_point()
print(Diamplot)
#regression for Diam vs Time#
m <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)
m
#plot for Diam vs time#
Diamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+b*(1-exp(-x/a)),
method.args=list(start=c(a=1, b=1)),
se=FALSE,
data=CAM,
color="red")
print(Diamplot1)
#Coefficient of Correlation for Diam vs Time model#
Rsquared_Diam <- cor(CAM$Diam, predict(m))
#generate table for regression parameters#
library(broom)
reg <- tidy(m)
#transform a parameter into range of regression#
a <- reg$estimate
a <- a[c(1)]
range <- 3*a
#make a variable for the b parameter for diameter vs time#
b <- reg$estimate
b <- b[c(2)]
#regression for CAO=(CA/Cao) vs Time#
m3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)
m3
#plot for m3#
CAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+(e*x^f),
method.args=list(start=c(e=1, f=1)),
se=FALSE)
print(CAOplot)
#Coefficient of correlation for CA/CAo vs Time (model=m3)#
Rsquared_CAO <- cor(CAM$CAO, predict(m3))
#generate table for regression parameters#
reg3<- tidy(m3)
e <- reg3$estimate
e <- e[c(1)]
f <- reg3$estimate
f <- f[c(2)]
#regression for CA using next method#
m4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)
m4
CATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+(h*(x^g)),
method.args=list(start=c(h=1, g=1)),
se=FALSE)
print(CATplot)
Rsquared_CAT <- cor(CAM$CAT, predict(m4))
#generate table or regression parameters#
reg4 <- tidy(m4)
h <- reg4$estimate
h <- h[c(1)]
g <- reg4$estimate
g <- g[c(2)]
#Fit CAeq using the range from Diam vs Time regression and the model m4#
CATeq <- (Co)/(1+(h*(range^g)))
#Fit CAeq using the range from Diam vs Time regression and the model m3#
CAOeq <- (1+e*range^f)*(Co)
#Store the information for this rep in a data frame#
CM_S2_1B <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)
#Pull the data from the desktop#
cadata <- readxl::read_excel("CM-S2-1C_FINAL.xlsx")
cadata <- data.frame(cadata)
#Select on the variables of CA, Time, and Diameter#
CAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))
#Select only the values in the column which are numeric#
CAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]
#Transform the data back into numbers, extract CAo (Co)#
CA<-c(as.numeric(levels(CAM$CA))[CAM$CA])
Time<-c(as.numeric(levels(CAM$Time))[CAM$Time])
Diam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])
Co<-CA[c(1)]
Do<-Diam[c(1)]
Diam <- c(Diam/Do)
CAT <- c(Co/CA)
CAO <- c(CA/Co)
CAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))
#Plot raw data Diameter vs Time#
library(ggplot2)
Diamplot <- ggplot(CAM, aes(Time, Diam))+
geom_point()
print(Diamplot)
#regression for Diam vs Time#
m <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)
m
#plot for Diam vs time#
Diamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+b*(1-exp(-x/a)),
method.args=list(start=c(a=1, b=1)),
se=FALSE,
data=CAM,
color="red")
print(Diamplot1)
#Coefficient of Correlation for Diam vs Time model#
Rsquared_Diam <- cor(CAM$Diam, predict(m))
#generate table for regression parameters#
library(broom)
reg <- tidy(m)
#transform a parameter into range of regression#
a <- reg$estimate
a <- a[c(1)]
range <- 3*a
#make a variable for the b parameter for diameter vs time#
b <- reg$estimate
b <- b[c(2)]
#regression for CAO=(CA/Cao) vs Time#
m3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)
m3
#plot for m3#
CAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+(e*x^f),
method.args=list(start=c(e=1, f=1)),
se=FALSE)
print(CAOplot)
#Coefficient of correlation for CA/CAo vs Time (model=m3)#
Rsquared_CAO <- cor(CAM$CAO, predict(m3))
#generate table for regression parameters#
reg3<- tidy(m3)
e <- reg3$estimate
e <- e[c(1)]
f <- reg3$estimate
f <- f[c(2)]
#regression for CA using next method#
m4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)
m4
CATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+(h*(x^g)),
method.args=list(start=c(h=1, g=1)),
se=FALSE)
print(CATplot)
Rsquared_CAT <- cor(CAM$CAT, predict(m4))
#generate table or regression parameters#
reg4 <- tidy(m4)
h <- reg4$estimate
h <- h[c(1)]
g <- reg4$estimate
g <- g[c(2)]
#Fit CAeq using the range from Diam vs Time regression and the model m4#
CATeq <- (Co)/(1+(h*(range^g)))
#Fit CAeq using the range from Diam vs Time regression and the model m3#
CAOeq <- (1+e*range^f)*(Co)
#Store the information for this rep in a data frame#
CM_S2_1C <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)
#Pull the data from the desktop#
cadata <- readxl::read_excel("CM-S2-2A_FINAL.xlsx")
cadata <- data.frame(cadata)
#Select on the variables of CA, Time, and Diameter#
CAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))
#Select only the values in the column which are numeric#
CAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]
#Transform the data back into numbers, extract CAo (Co)#
CA<-c(as.numeric(levels(CAM$CA))[CAM$CA])
Time<-c(as.numeric(levels(CAM$Time))[CAM$Time])
Diam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])
Co<-CA[c(1)]
Do<-Diam[c(1)]
Diam <- c(Diam/Do)
CAT <- c(Co/CA)
CAO <- c(CA/Co)
CAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))
#Plot raw data Diameter vs Time#
library(ggplot2)
Diamplot <- ggplot(CAM, aes(Time, Diam))+
geom_point()
print(Diamplot)
#regression for Diam vs Time#
m <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)
m
#plot for Diam vs time#
Diamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+b*(1-exp(-x/a)),
method.args=list(start=c(a=1, b=1)),
se=FALSE,
data=CAM,
color="red")
print(Diamplot1)
#Coefficient of Correlation for Diam vs Time model#
Rsquared_Diam <- cor(CAM$Diam, predict(m))
#generate table for regression parameters#
library(broom)
reg <- tidy(m)
#transform a parameter into range of regression#
a <- reg$estimate
a <- a[c(1)]
range <- 3*a
#make a variable for the b parameter for diameter vs time#
b <- reg$estimate
b <- b[c(2)]
#regression for CAO=(CA/Cao) vs Time#
m3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)
m3
#plot for m3#
CAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+(e*x^f),
method.args=list(start=c(e=1, f=1)),
se=FALSE)
print(CAOplot)
#Coefficient of correlation for CA/CAo vs Time (model=m3)#
Rsquared_CAO <- cor(CAM$CAO, predict(m3))
#generate table for regression parameters#
reg3<- tidy(m3)
e <- reg3$estimate
e <- e[c(1)]
f <- reg3$estimate
f <- f[c(2)]
#regression for CA using next method#
m4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)
m4
CATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+(h*(x^g)),
method.args=list(start=c(h=1, g=1)),
se=FALSE)
print(CATplot)
Rsquared_CAT <- cor(CAM$CAT, predict(m4))
#generate table or regression parameters#
reg4 <- tidy(m4)
h <- reg4$estimate
h <- h[c(1)]
g <- reg4$estimate
g <- g[c(2)]
#Fit CAeq using the range from Diam vs Time regression and the model m4#
CATeq <- (Co)/(1+(h*(range^g)))
#Fit CAeq using the range from Diam vs Time regression and the model m3#
CAOeq <- (1+e*range^f)*(Co)
#Store the information for this rep in a data frame#
CM_S2_2A <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)
#Pull the data from the desktop#
cadata <- readxl::read_excel("CM-S2-2B_FINAL.xlsx")
cadata <- data.frame(cadata)
#Select on the variables of CA, Time, and Diameter#
CAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))
#Select only the values in the column which are numeric#
CAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]
#Transform the data back into numbers, extract CAo (Co)#
CA<-c(as.numeric(levels(CAM$CA))[CAM$CA])
Time<-c(as.numeric(levels(CAM$Time))[CAM$Time])
Diam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])
Co<-CA[c(1)]
Do<-Diam[c(1)]
Diam <- c(Diam/Do)
CAT <- c(Co/CA)
CAO <- c(CA/Co)
CAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))
#Plot raw data Diameter vs Time#
library(ggplot2)
Diamplot <- ggplot(CAM, aes(Time, Diam))+
geom_point()
print(Diamplot)
#regression for Diam vs Time#
m <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)
m
#plot for Diam vs time#
Diamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+b*(1-exp(-x/a)),
method.args=list(start=c(a=1, b=1)),
se=FALSE,
data=CAM,
color="red")
print(Diamplot1)
#Coefficient of Correlation for Diam vs Time model#
Rsquared_Diam <- cor(CAM$Diam, predict(m))
#generate table for regression parameters#
library(broom)
reg <- tidy(m)
#transform a parameter into range of regression#
a <- reg$estimate
a <- a[c(1)]
range <- 3*a
#make a variable for the b parameter for diameter vs time#
b <- reg$estimate
b <- b[c(2)]
#regression for CAO=(CA/Cao) vs Time#
m3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)
m3
#plot for m3#
CAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+(e*x^f),
method.args=list(start=c(e=1, f=1)),
se=FALSE)
print(CAOplot)
#Coefficient of correlation for CA/CAo vs Time (model=m3)#
Rsquared_CAO <- cor(CAM$CAO, predict(m3))
#generate table for regression parameters#
reg3<- tidy(m3)
e <- reg3$estimate
e <- e[c(1)]
f <- reg3$estimate
f <- f[c(2)]
#regression for CA using next method#
m4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)
m4
CATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+(h*(x^g)),
method.args=list(start=c(h=1, g=1)),
se=FALSE)
print(CATplot)
Rsquared_CAT <- cor(CAM$CAT, predict(m4))
#generate table or regression parameters#
reg4 <- tidy(m4)
h <- reg4$estimate
h <- h[c(1)]
g <- reg4$estimate
g <- g[c(2)]
#Fit CAeq using the range from Diam vs Time regression and the model m4#
CATeq <- (Co)/(1+(h*(range^g)))
#Fit CAeq using the range from Diam vs Time regression and the model m3#
CAOeq <- (1+e*range^f)*(Co)
#Store the information for this rep in a data frame#
CM_S2_2B <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)
#Pull the data from the desktop#
cadata <- readxl::read_excel("CM-S2-2C_FINAL.xlsx")
cadata <- data.frame(cadata)
#Select on the variables of CA, Time, and Diameter#
CAM <- data.frame(CA=c(cadata$Var.6), Time=c(cadata$Var.13), Diam=c(cadata$Var.11))
#Select only the values in the column which are numeric#
CAM <- CAM[!is.na(as.numeric(as.character(CAM$CA))), ]
#Transform the data back into numbers, extract CAo (Co)#
CA<-c(as.numeric(levels(CAM$CA))[CAM$CA])
Time<-c(as.numeric(levels(CAM$Time))[CAM$Time])
Diam<-c(as.numeric(levels(CAM$Diam))[CAM$Diam])
Co<-CA[c(1)]
Do<-Diam[c(1)]
Diam <- c(Diam/Do)
CAT <- c(Co/CA)
CAO <- c(CA/Co)
CAM <- data.frame(CA=c(CA), Time=c(Time), Diam=c(Diam), CAO=c(CAO), CAT=c(CAT))
#Plot raw data Diameter vs Time#
library(ggplot2)
Diamplot <- ggplot(CAM, aes(Time, Diam))+
geom_point()
print(Diamplot)
#regression for Diam vs Time#
m <- nls(Diam ~ 1+b*(1-exp(-Time/a)),start=list(a=1,b=1), data=CAM)
m
#plot for Diam vs time#
Diamplot1<-ggplot(data=CAM, aes(x=Time,y=Diam))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+b*(1-exp(-x/a)),
method.args=list(start=c(a=1, b=1)),
se=FALSE,
data=CAM,
color="red")
print(Diamplot1)
#Coefficient of Correlation for Diam vs Time model#
Rsquared_Diam <- cor(CAM$Diam, predict(m))
#generate table for regression parameters#
library(broom)
reg <- tidy(m)
#transform a parameter into range of regression#
a <- reg$estimate
a <- a[c(1)]
range <- 3*a
#make a variable for the b parameter for diameter vs time#
b <- reg$estimate
b <- b[c(2)]
#regression for CAO=(CA/Cao) vs Time#
m3 <- nls(CAO~1+e*(Time^f),start=list(e=1,f=1), data=CAM)
m3
#plot for m3#
CAOplot <- ggplot(data=CAM, aes(x=Time, y=CAO))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+(e*x^f),
method.args=list(start=c(e=1, f=1)),
se=FALSE)
print(CAOplot)
#Coefficient of correlation for CA/CAo vs Time (model=m3)#
Rsquared_CAO <- cor(CAM$CAO, predict(m3))
#generate table for regression parameters#
reg3<- tidy(m3)
e <- reg3$estimate
e <- e[c(1)]
f <- reg3$estimate
f <- f[c(2)]
#regression for CA using next method#
m4 <- nls(CAT~h*(Time^g)+1,start=list(h=1,g=1), data=CAM)
m4
CATplot <- ggplot(data=CAM, aes(x=Time, y=CAT))+
geom_point()+
geom_smooth(method="nls",
formula=y~1+(h*(x^g)),
method.args=list(start=c(h=1, g=1)),
se=FALSE)
print(CATplot)
Rsquared_CAT <- cor(CAM$CAT, predict(m4))
#generate table or regression parameters#
reg4 <- tidy(m4)
h <- reg4$estimate
h <- h[c(1)]
g <- reg4$estimate
g <- g[c(2)]
#Fit CAeq using the range from Diam vs Time regression and the model m4#
CATeq <- (Co)/(1+(h*(range^g)))
#Fit CAeq using the range from Diam vs Time regression and the model m3#
CAOeq <- (1+e*range^f)*(Co)
#Store the information for this rep in a data frame#
CM_S2_2C <- data.frame(range, b, e, f, g, h, Rsquared_Diam, Rsquared_CAO, Rsquared_CAT, CAOeq, CATeq)
CM_Data <- rbind.data.frame(CM_S1_1A=CM_S1_1A, CM_S1_1B=CM_S1_1B, CM_S1_1C=CM_S1_1C, CM_S1_2A=CM_S1_2A, CM_S1_2B=CM_S1_2B, CM_S1_2C=CM_S1_2C, CM_S2_1A=CM_S2_1A, CM_S2_1B=CM_S2_1B, CM_S2_1C=CM_S2_1C, CM_S2_2A=CM_S2_2A, CM_S2_2B=CM_S2_2B, CM_S2_2C=CM_S2_2C)
write.csv(CM_Data,"C:/Users/dell user/Desktop/CM_Data.csv")
Mean_Eq_Contact_Angle_CM <- mean(CM_Data[["CAOeq"]])
